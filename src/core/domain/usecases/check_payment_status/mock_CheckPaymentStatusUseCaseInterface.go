// Code generated by mockery v2.43.2. DO NOT EDIT.

package check_payment_status

import mock "github.com/stretchr/testify/mock"

// MockCheckPaymentStatusUseCaseInterface is an autogenerated mock type for the CheckPaymentStatusUseCaseInterface type
type MockCheckPaymentStatusUseCaseInterface struct {
	mock.Mock
}

// ExecuteCheckPaymentStatus provides a mock function with given fields: orderId
func (_m *MockCheckPaymentStatusUseCaseInterface) ExecuteCheckPaymentStatus(orderId uint) (string, error) {
	ret := _m.Called(orderId)

	if len(ret) == 0 {
		panic("no return value specified for ExecuteCheckPaymentStatus")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(uint) (string, error)); ok {
		return rf(orderId)
	}
	if rf, ok := ret.Get(0).(func(uint) string); ok {
		r0 = rf(orderId)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(orderId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockCheckPaymentStatusUseCaseInterface creates a new instance of MockCheckPaymentStatusUseCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockCheckPaymentStatusUseCaseInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockCheckPaymentStatusUseCaseInterface {
	mock := &MockCheckPaymentStatusUseCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
