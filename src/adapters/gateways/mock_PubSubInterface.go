// Code generated by mockery v2.43.2. DO NOT EDIT.

package gateways

import mock "github.com/stretchr/testify/mock"

// MockPubSubInterface is an autogenerated mock type for the PubSubInterface type
type MockPubSubInterface struct {
	mock.Mock
}

// NotifyPaymentApproved provides a mock function with given fields: orderId
func (_m *MockPubSubInterface) NotifyPaymentApproved(orderId string) error {
	ret := _m.Called(orderId)

	if len(ret) == 0 {
		panic("no return value specified for NotifyPaymentApproved")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(orderId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NotifyPaymentError provides a mock function with given fields: orderId
func (_m *MockPubSubInterface) NotifyPaymentError(orderId string) error {
	ret := _m.Called(orderId)

	if len(ret) == 0 {
		panic("no return value specified for NotifyPaymentError")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(orderId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockPubSubInterface creates a new instance of MockPubSubInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPubSubInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPubSubInterface {
	mock := &MockPubSubInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
